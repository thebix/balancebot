import { store } from '../server'
import { botCmd } from '../actions'
import _commands from '../enums/commands'

export default class Help {

    getHelp(message, bot, route) {
        store.dispatch(botCmd(message.chat.id, _commands.HELP))
        if (!route || route == 'help') {
            bot.sendMessage(message.chat.id, `–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ü§ñ`, {
                reply_markup: JSON.stringify({
                    inline_keyboard: [
                        [
                            {
                                text: `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1`,
                                callback_data: `help/sub1`
                            }, {
                                text: `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2`,
                                callback_data: `help/sub2`
                            }
                        ],
                        [{
                            text: `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 3`,
                            callback_data: `help/sub3`
                        }]
                    ]
                })
            })
            return
        }

        const buttonBack = {
            reply_markup: JSON.stringify({
                inline_keyboard: [
                    [
                        {
                            text: `–ù–∞–∑–∞–¥`,
                            callback_data: `help`
                        }
                    ]
                ]
            })
        }
        switch (route) {
            case 'help/sub1':
                bot.sendMessage(message.chat.id, `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1 —Ö–µ–ª–ø ü§ñ`, buttonBack)
                return
            case 'help/sub2':
                bot.sendMessage(message.chat.id, `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2 —Ö–µ–ª–ø ü§ñ`, buttonBack)
                return
            case 'help/sub3':
                bot.sendMessage(message.chat.id, `–ö–∞—Ç–µ–≥–æ—Ä–∏—è 3 —Ö–µ–ª–ø ü§ñ`, buttonBack)
                return
        }
        return
    }
}